<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java web</title>
    <url>/2023/06/10/Java%20web/</url>
    <content><![CDATA[<h1 id="logback日志技术"><a href="#logback日志技术" class="headerlink" title="logback日志技术"></a>logback日志技术</h1><p>logback home<a class="link"   href="https://logback.qos.ch/index.html" > <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Maven-Dependency-Maven依赖"><a href="#Maven-Dependency-Maven依赖" class="headerlink" title="Maven Dependency(Maven依赖)"></a><strong>Maven Dependency(Maven依赖)</strong></h3><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h3 id="Basic-Example-and-Configuration-配置信息logback-xml"><a href="#Basic-Example-and-Configuration-配置信息logback-xml" class="headerlink" title="Basic Example and Configuration(配置信息logback.xml)"></a><strong>Basic Example and Configuration(配置信息logback.xml)</strong></h3><p>需要放在src目录下</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h1 id="Mybatis-包含日志"><a href="#Mybatis-包含日志" class="headerlink" title="Mybatis(包含日志)"></a>Mybatis(包含日志)</h1><h3 id="pom-xml-由于mysql-jar包出错，所以是手动导入的"><a href="#pom-xml-由于mysql-jar包出错，所以是手动导入的" class="headerlink" title="pom.xml(由于mysql jar包出错，所以是手动导入的)"></a>pom.xml(由于mysql jar包出错，所以是手动导入的)</h3><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logbacks<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>20<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>20<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h3 id="mybatis-config-xml"><a href="#mybatis-config-xml" class="headerlink" title="mybatis-config.xml"></a>mybatis-config.xml</h3><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/MyBatis&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<h3 id="mapper-xml"><a href="#mapper-xml" class="headerlink" title="mapper.xml"></a>mapper.xml</h3><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.mybatis.example.BlogMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectid&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h3 id="Student实例"><a href="#Student实例" class="headerlink" title="Student实例"></a>Student实例</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String area;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造方法、getter和setter等省略...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注意：在实际项目中，可能需要更多的属性和方法来处理业务逻辑</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, area=&#x27;&quot;</span> + area + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">configPath</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 加载 MyBatis 配置文件</span></span><br><span class="line">            <span class="type">Reader</span> <span class="variable">reader</span> <span class="operator">=</span> Resources.getResourceAsReader(configPath);</span><br><span class="line">            <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(reader);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建 SqlSession</span></span><br><span class="line">            <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 执行查询操作</span></span><br><span class="line">                <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> sqlSession.selectOne(<span class="string">&quot;org.mybatis.example.BlogMapper.selectid&quot;</span>, <span class="number">1</span>);</span><br><span class="line">                System.out.println(student.toString());</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                sqlSession.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h3 id="项目对外作为依赖不想被其他人看到依赖"><a href="#项目对外作为依赖不想被其他人看到依赖" class="headerlink" title="项目对外作为依赖不想被其他人看到依赖"></a>项目对外作为依赖不想被其他人看到依赖</h3><p>在依赖标签下添加以下信息</p>
<p><optional>true</optional></p>
<h2 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h2><table>
<thead>
<tr>
<th>scope</th>
<th>主代码</th>
<th>测试代码</th>
<th>打包</th>
<th>范例</th>
</tr>
</thead>
<tbody><tr>
<td>compile(默认)</td>
<td>y</td>
<td>y</td>
<td>y</td>
<td>log4j</td>
</tr>
<tr>
<td>test</td>
<td></td>
<td>y</td>
<td></td>
<td>junit</td>
</tr>
<tr>
<td>provided</td>
<td>y</td>
<td>y</td>
<td></td>
<td>servlet-api</td>
</tr>
<tr>
<td>runtime</td>
<td></td>
<td></td>
<td>y</td>
<td>jdbc</td>
</tr>
</tbody></table>
<h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.tomcat.maven/tomcat7-maven-plugin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h1 id="java循环"><a href="#java循环" class="headerlink" title="java循环"></a>java循环</h1><h2 id="for-each"><a href="#for-each" class="headerlink" title="for-each"></a>for-each</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (元素类型 变量名 : 遍历对象) &#123;</span><br><span class="line">    // 循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> number : numbers) &#123;</span><br><span class="line">    System.out.println(number);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StackPractice</span> <span class="keyword">extends</span> <span class="title class_">Stack</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">isBracketMatching</span><span class="params">(String symbol)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> s:symbol.toCharArray()</span><br><span class="line">             ) &#123;</span><br><span class="line">            System.out.print(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">symbol</span> <span class="operator">=</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">        <span class="type">StackPractice</span> <span class="variable">stackPractice</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPractice</span>();</span><br><span class="line">        stackPractice.isBracketMatching(symbol);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>





]]></content>
      <categories>
        <category>-Learning</category>
      </categories>
      <tags>
        <tag>-Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring 学习汇总(更新中)</title>
    <url>/2023/06/10/Spring1/</url>
    <content><![CDATA[<h2 id="Spring-IoC容器"><a href="#Spring-IoC容器" class="headerlink" title="Spring IoC容器"></a>Spring IoC容器</h2><blockquote>
<p>IoC（Inversion of Control，控制反转）容器是一种用于管理对象的框架或机制，它实现了对象的创建、组装和生命周期管理等功能。在传统的编程模型中，对象的创建和依赖关系通常由开发者手动管理，而IoC容器的出现将这些责任转移给了容器本身。</p>
<p>IoC容器的主要思想是将对象的创建和依赖关系的处理与业务逻辑代码分离。它通过读取配置信息或注解来了解对象之间的依赖关系，并负责实例化和管理这些对象。开发者只需声明对象之间的关系，而不需要直接负责对象的创建和组装。</p>
<p>通常，IoC容器提供以下功能：</p>
<ol>
<li>对象实例化：IoC容器负责根据配置信息或注解，实例化所需的对象。</li>
<li>依赖注入：IoC容器负责将对象所依赖的其他对象注入到目标对象中，解决对象之间的依赖关系。</li>
<li>生命周期管理：IoC容器负责管理对象的生命周期，包括对象的创建、初始化和销毁等。</li>
<li>配置管理：IoC容器提供配置管理的功能，可以通过配置文件或注解来描述对象的创建和依赖关系。</li>
</ol>
<p>常见的IoC容器包括Spring Framework的ApplicationContext和BeanFactory，Java EE的CDI（Contexts and Dependency Injection）容器等。这些容器提供了一种简单而强大的方式来管理对象，提高了应用程序的灵活性和可维护性。</p>
<p>总结来说，IoC容器是一种框架或机制，通过控制对象的创建和依赖关系来实现对象的解耦和管理，使开发者能够更专注于业务逻辑的实现。</p>
</blockquote>
<h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><p>1.定义一个接口和实现类</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;BookDao save...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDaoImpl</span>();<span class="comment">//使用new来创建对象，耦合度高</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;book service save...&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>





<p>2.添加Spring config</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.springpic.dao.impl.BookDaoImpl&quot;</span> /&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.springpic.service.impl.BookServiceImpl&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><strong>Precautions</strong>  bean定义的时候，同一上下文不能重复</p>
<p>3.使用IoC</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//获取IoC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicanContext.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> (BookDao) ctx.getBean(<span class="string">&quot;bookDao&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line">        </span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> (BookService) ctx.getBean(<span class="string">&quot;bookService&quot;</span>);</span><br><span class="line">        bookService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>





<h2 id="DI-Dependency-Injection"><a href="#DI-Dependency-Injection" class="headerlink" title="DI(Dependency Injection)"></a>DI(Dependency Injection)</h2><blockquote>
<p>DI（Dependency Injection）是一种软件设计模式，用于实现对象之间的解耦和依赖关系的管理。它是控制反转（Inversion of Control，IoC）的一种具体实现方式。</p>
<p>在传统的编程模型中，对象通常负责自己的依赖关系的创建和管理。这导致对象之间紧密耦合，使得代码难以测试、扩展和维护。而DI的目标是通过将对象的依赖关系从对象本身移动到外部，来降低对象之间的耦合性。</p>
<p>在DI中，对象不再负责自己的依赖关系的创建和管理，而是由外部的容器（如IoC容器）来完成。对象只需声明它所需要的依赖，并提供一种方式来将依赖注入到对象中。这种方式可以通过构造函数、属性的Setter方法或接口的方法来实现。</p>
<p>DI的核心思想是通过依赖注入，将一个对象所需要的依赖传递给它，而不是由对象自己去创建或查找依赖。这样可以实现以下好处：</p>
<ol>
<li>解耦：通过DI，对象不需要直接知道和依赖具体的实现类，从而降低了对象之间的耦合性。这使得代码更加灵活、可扩展和可维护。</li>
<li>可测试性：依赖注入使得对象的依赖可以被模拟或替换，从而方便进行单元测试。通过注入不同的依赖，可以测试对象在不同环境下的行为和功能。</li>
<li>可复用性：通过依赖注入，可以将对象的依赖作为独立的组件来创建和管理，从而提高了代码的可复用性。多个对象可以共享同一个依赖实例，避免了重复创建和管理。</li>
</ol>
<p>常见的DI框架包括Spring Framework、Google Guice、Java EE中的CDI（Contexts and Dependency Injection）等。这些框架提供了自动化的依赖注入机制，简化了对象的创建和组装过程，提高了开发效率。</p>
<p>总结来说，DI是一种通过将对象的依赖关系从对象本身解耦和管理的软件设计模式。它通过依赖注入的方式，将对象的依赖传递给它，从而实现代码的解耦、可测试性和可复用性。</p>
</blockquote>
<p>在刚才的代码基础上进行修改 </p>
<p>1.不使用<code>new</code>来创建对象，提供setter方法</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;<span class="comment">//去除了new实例化对象</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;book service save...&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBookDao</span><span class="params">(BookDao bookDao)</span> &#123; <span class="comment">//容器在执行</span></span><br><span class="line">        <span class="built_in">this</span>.bookDao = bookDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>2.修改配置文件</p>
<blockquote>
<p>property –&gt;配置当前bean的属性</p>
<p>name –&gt;配置哪一个具体的属性</p>
<p>ref –&gt;参照哪一个bean</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line">       xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xmlns:util=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span><br><span class="line">        &lt;bean id=<span class="string">&quot;bookDao&quot;</span> class=<span class="string">&quot;com.ppzhu.springpic.dao.impl.BookDaoImpl&quot;</span> /&gt;</span><br><span class="line">        &lt;bean id=<span class="string">&quot;bookService&quot;</span> class=<span class="string">&quot;com.ppzhu.springpic.service.impl.BookServiceImpl&quot;</span>&gt;</span><br><span class="line">                &lt;property name=<span class="string">&quot;bookDao&quot;</span> ref=<span class="string">&quot;bookDao&quot;</span>/&gt;</span><br><span class="line">        &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></div>





<h2 id="Bean的基础配置"><a href="#Bean的基础配置" class="headerlink" title="Bean的基础配置"></a>Bean的基础配置</h2><p>1.起别名（name)</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.springpic.dao.impl.BookDaoImpl&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>2.配置作用范围（单例 or 非单例）默认为单例singleton</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.springpic.service.impl.BookServiceImpl&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<p>适合交给容器管理的bean</p>
<ul>
<li>表现层对象</li>
<li>业务层对象</li>
<li>数据层对象</li>
<li>工具对象</li>
</ul>
<p>不适合交给容器管理的对象</p>
<ul>
<li>封装实体的对象（有成员变量）</li>
</ul>
<h2 id="Bean-实例化"><a href="#Bean-实例化" class="headerlink" title="Bean 实例化"></a>Bean 实例化</h2><p>1.使用构造方法来实例化，不管构造器是否私有都可以创建，前提是无参构造器 （如果没有无参构造器，抛出异常）</p>
<p>2.使用静态工厂实例化bean(包含静态工厂方法)</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDaoFactory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> OrderDao <span class="title function_">getOrderDao</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OrderDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>xml配置</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;orderDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.factory.OrderDaoFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getOrderDao&quot;</span>/&gt;</span>	</span><br></pre></td></tr></table></figure></div>



<p>3.使用实例工厂实例化bean</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> UserDao <span class="title function_">getUserDao</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;user dao save..&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">UserDaoFactory</span> <span class="variable">userdaofactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoFactory</span>();</span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> userdaofactory.getUserDao();</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>xml配置（使用factory-methed       factory-bean）</p>
<p>因为是实例工厂，需要先实例化工厂对象，再由工厂对象来调用get方法</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserDaoFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.factory.UserDaoFactory&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;UserDao&quot;</span> <span class="attr">factory-methed</span>=<span class="string">&quot;getUserDao&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;userFactory&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>



<p>4.使用FactoryBean实例化（实例工厂实例化改良版）</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;UserDao&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDao <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> UserDao.class;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSingleton</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//单例</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"><span class="comment">//    public boolean isSingleton() &#123;</span></span><br><span class="line"><span class="comment">//        return false;//非单例</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//获取IoC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicanContext.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> (UserDao) ctx.getBean(<span class="string">&quot;userDaoFactoryBean&quot;</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>





<p>xml配置</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoFactoryBean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.springpic.factory.UserDaoFactoryBean&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>





<h2 id="Bean的生命周期"><a href="#Bean的生命周期" class="headerlink" title="Bean的生命周期"></a>Bean的生命周期</h2><h3 id="初始化容器"><a href="#初始化容器" class="headerlink" title="初始化容器"></a>初始化容器</h3><ol>
<li>创建对象（内存分配）</li>
<li>执行构造方法</li>
<li>执行属性注入（set操作）</li>
<li>执行bean初始化操作</li>
</ol>
<h3 id="使用Bean"><a href="#使用Bean" class="headerlink" title="使用Bean"></a>使用Bean</h3><ol>
<li>执行业务操作</li>
</ol>
<h3 id="关闭-x2F-销毁容器"><a href="#关闭-x2F-销毁容器" class="headerlink" title="关闭&#x2F;销毁容器"></a>关闭&#x2F;销毁容器</h3><ol>
<li>执行Bean销毁方法</li>
</ol>
<h2 id="初始化操作"><a href="#初始化操作" class="headerlink" title="初始化操作"></a>初始化操作</h2><h3 id="1-使用xml配置来初始化bean"><a href="#1-使用xml配置来初始化bean" class="headerlink" title="1.使用xml配置来初始化bean"></a>1.使用xml配置来初始化bean</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;BookDao save...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法名可以随便取，只要在xml中声明就可以</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;<span class="comment">//初始化</span></span><br><span class="line">        System.out.println(<span class="string">&quot;dao init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;<span class="comment">//销毁前做的事</span></span><br><span class="line">        System.out.println(<span class="string">&quot;dao destroy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>通过xml配置<code>init-method</code>和<code>destroy-method</code>属性</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.springpic.dao.impl.BookDaoImpl&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;destroy&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroy&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="2-使用官方API来实现"><a href="#2-使用官方API来实现" class="headerlink" title="2.使用官方API来实现"></a>2.使用官方API来实现</h3><p>使用<code>InitializingBean</code>和<code>DisposableBean</code>来实现，其中<code>destroy()</code>是销毁前做的事，<code>afterPropertiesSet()</code>是初始化做的事</p>
<blockquote>
<p>注意：<code>afterPropertiesSet()</code>是在配置完以后再执行，因此会比<code>init-method</code>后执行</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span>, InitializingBean, DisposableBean &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;user dao save..&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;<span class="comment">//销毁前做的事</span></span><br><span class="line">        System.out.println(<span class="string">&quot;user dao destroy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;<span class="comment">//初始化</span></span><br><span class="line">        System.out.println(<span class="string">&quot;user dao init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>







<h2 id="销毁Bean的时机"><a href="#销毁Bean的时机" class="headerlink" title="销毁Bean的时机"></a>销毁Bean的时机</h2><p>1.使用<code>ClassPathXmlApplicationContext</code>的close方法</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//获取IoC容器</span></span><br><span class="line">        <span class="type">ClassPathXmlApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicanContext.xml&quot;</span>);</span><br><span class="line">        </span><br><span class="line">		<span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> (BookDao) ctx.getBean(<span class="string">&quot;bookDao&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line"></span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> (UserDao) ctx.getBean(<span class="string">&quot;userDaoFactoryBean&quot;</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line"></span><br><span class="line">        ctx.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<p>2.注册关闭钩子</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//获取IoC容器</span></span><br><span class="line">        <span class="type">ClassPathXmlApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicanContext.xml&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//注册钩子，在JVM虚拟机关闭以前会自动关闭容器</span></span><br><span class="line">        ctx.registerShutdownHook();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> (BookDao) ctx.getBean(<span class="string">&quot;bookDao&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line"></span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> (UserDao) ctx.getBean(<span class="string">&quot;userDaoFactoryBean&quot;</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="依赖注入方式"><a href="#依赖注入方式" class="headerlink" title="依赖注入方式"></a>依赖注入方式</h2><h3 id="setter注入"><a href="#setter注入" class="headerlink" title="setter注入"></a>setter注入</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataDao</span> &#123;</span><br><span class="line">    <span class="comment">//引用类型</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="comment">//简单类型</span></span><br><span class="line">    <span class="keyword">private</span> String databaseName;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> databasesNumber;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDatabasesNumber</span><span class="params">(<span class="type">int</span> databasesNumber)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.databasesNumber = databasesNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;data dao save&quot;</span>+<span class="string">&quot; &quot;</span>+userDao+<span class="string">&quot; &quot;</span>+databaseName+<span class="string">&quot; &quot;</span>+databasesNumber);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDatabaseName</span><span class="params">(String databaseName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.databaseName = databaseName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>xml配置</p>
<blockquote>
<p>简单类型的注入用<code>value</code>关键字</p>
<p>引用类型的注入用<code>ref</code>关键字</p>
</blockquote>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ppzhu.springpic.dao.impl.DataDao&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;databaseName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span>/&gt;</span></span><br><span class="line">    			//前一个userDao指的是`private UserDao userDao`中的userDao，后一个userDao指的是引用类型的id或者name</span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;databasesNumber&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>







<h2 id="Spring-加载properties文件"><a href="#Spring-加载properties文件" class="headerlink" title="Spring 加载properties文件"></a>Spring 加载properties文件</h2><p>开启命名空间</p>
<h2 id="获取容器的方式"><a href="#获取容器的方式" class="headerlink" title="获取容器的方式"></a>获取容器的方式</h2><p>1.加载类路径下的配置文件</p>
<p>2.从文件系统下加载配置文件</p>
<p>3.加载多个配置文件</p>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java</title>
    <url>/2023/06/10/java/</url>
    <content><![CDATA[<h1 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h1><p>所有的覆写方法，必须加<code>@Override</code>注解</p>
<h1 id="Java多线程"><a href="#Java多线程" class="headerlink" title="Java多线程"></a>Java多线程</h1><h2 id="实现多线程"><a href="#实现多线程" class="headerlink" title="实现多线程"></a>实现多线程</h2><p>way1</p>
<blockquote>
<p>继承thread类</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;子线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;主线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<p>way2</p>
<blockquote>
<p>实现Runnable接口</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">runnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;子线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">runnable</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">runnable</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(target);</span><br><span class="line">        thread.start();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;主线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>匿名内部类 （匿名内部类的简化形式）</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">runnable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//匿名内部类实现多线程</span></span><br><span class="line">        <span class="type">Runnable</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;子线程&quot;</span>+i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//匿名内部类的简写形式</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;简写匿名内部类&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//匿名内部类的极简方式  前提：函数式接口</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt; &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;匿名内部类的极简方式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        ).start();</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(target);</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;主线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<p>way3</p>
<blockquote>
<p>实现Callable接口,结合FutureTask返回结果 （&#x3D;&#x3D;可以返回结果&#x3D;&#x3D;）</p>
</blockquote>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyCallable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">Mycallable</span> <span class="variable">callable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Mycallable</span>(<span class="number">100</span>);<span class="comment">//创建实例</span></span><br><span class="line">        FutureTask&lt;String&gt; futureTask = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;&gt;(callable);<span class="comment">//第一层封装</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(futureTask);<span class="comment">//第二层封装</span></span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> futureTask.get();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mycallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;String&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> number;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Mycallable</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.number = number;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; number; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;result:&quot;</span>+sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>





<h2 id="线程安全问题"><a href="#线程安全问题" class="headerlink" title="线程安全问题"></a>线程安全问题</h2><h3 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h3><p>线程同步解决安全问题的思想：</p>
<p><strong>加锁</strong>，让多个线程实现先后依次访问共享资源，这样就解决了安全问题</p>
<p>way1</p>
<blockquote>
<p>同步代码块</p>
</blockquote>
<p><strong>锁对象的规范要求：</strong>建议使用共享资源作为锁对象</p>
<p>对于<strong>实例方法</strong>建议使用this作为锁对象</p>
<p>对于<strong>静态方法</strong>使用 字节码（类名.class）作为锁对象</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    加锁以后，线程需要排队进入</span></span><br><span class="line"><span class="comment">	类为Account类，在实例调用drowMoney方法的时候</span></span><br><span class="line"><span class="comment">	this = acc共享账户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">drowMoney</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">this</span>.money &gt;money) &#123;</span><br><span class="line">                <span class="built_in">this</span>.money -= money;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;余额不足&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>way2</p>
<blockquote>
<p>同步方法</p>
</blockquote>
<p>格式：</p>
<p>修饰符 synchronized 返回值类型 方法名称 （形参列表）{</p>
<p>​	 操作共享资源的代码</p>
<p>}</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;子线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>-Learning</category>
      </categories>
      <tags>
        <tag>-Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java数据结构</title>
    <url>/2023/06/10/java%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ppzhu</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StackExample</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxSize; <span class="comment">//最大容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> top; <span class="comment">//栈顶位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> []stackArray;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">StackExample</span><span class="params">()</span> &#123; <span class="comment">//无参</span></span><br><span class="line">        <span class="built_in">this</span>.maxSize = <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">this</span>.top = -<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.stackArray = <span class="keyword">new</span> <span class="title class_">int</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">StackExample</span><span class="params">(<span class="type">int</span> size)</span> &#123; <span class="comment">//有参</span></span><br><span class="line">        <span class="built_in">this</span>.maxSize = size;</span><br><span class="line">        <span class="built_in">this</span>.top = -<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.stackArray = <span class="keyword">new</span> <span class="title class_">int</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(<span class="type">int</span> value)</span> &#123; <span class="comment">//入栈</span></span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;The stack is full!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        stackArray[++top] = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">pop</span><span class="params">()</span> &#123; <span class="comment">//出栈</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;The stack is empty&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stackArray[top--];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">peek</span><span class="params">()</span> &#123; <span class="comment">//显示栈顶元素但不出栈</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;The stack is empty&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stackArray[top];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123; <span class="comment">//判断是否为满栈</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.top == <span class="built_in">this</span>.maxSize-<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123; <span class="comment">//判断是否为空栈</span></span><br><span class="line">        <span class="keyword">return</span> top == -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StackExampleTest</span> &#123; <span class="comment">//测试类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">StackExample</span> <span class="variable">stack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackExample</span>();</span><br><span class="line">        <span class="comment">// 将元素入栈</span></span><br><span class="line">        stack.push(<span class="number">1</span>);</span><br><span class="line">        stack.push(<span class="number">2</span>);</span><br><span class="line">        stack.push(<span class="number">3</span>);</span><br><span class="line">        stack.push(<span class="number">4</span>);</span><br><span class="line">        stack.push(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取并输出栈顶元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot;栈顶元素：&quot;</span> + stack.peek());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 出栈，并输出出栈元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot;出栈元素：&quot;</span> + stack.pop());</span><br><span class="line">        System.out.println(<span class="string">&quot;出栈元素：&quot;</span> + stack.pop());</span><br><span class="line">        System.out.println(<span class="string">&quot;出栈元素：&quot;</span> + stack.pop());</span><br><span class="line">        System.out.println(<span class="string">&quot;出栈元素：&quot;</span> + stack.pop());</span><br><span class="line">        System.out.println(<span class="string">&quot;出栈元素：&quot;</span> + stack.pop());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 再次获取并输出栈顶元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot;栈顶元素：&quot;</span> + stack.peek());</span><br><span class="line">        System.out.println(stack.isEmpty());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyQueue</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer [] queueArray;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxSize;<span class="comment">//数组最大容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> front;<span class="comment">//前端</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> rear;<span class="comment">//尾端</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> currentSize;<span class="comment">//当前数组大小</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyQueue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.maxSize = <span class="number">5</span>;</span><br><span class="line">        <span class="built_in">this</span>.front = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.rear = -<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.currentSize = <span class="number">0</span>;</span><br><span class="line">        queueArray = <span class="keyword">new</span> <span class="title class_">Integer</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyQueue</span><span class="params">(<span class="type">int</span> size)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.maxSize = size;</span><br><span class="line">        <span class="built_in">this</span>.front = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.rear = -<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.currentSize = <span class="number">0</span>;</span><br><span class="line">        queueArray = <span class="keyword">new</span> <span class="title class_">Integer</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (currentSize == <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (currentSize == maxSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;the queue is full&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            rear = (rear + <span class="number">1</span>) % maxSize;</span><br><span class="line">            queueArray[rear] = number;</span><br><span class="line">            currentSize++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;the queue is empty&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">number</span> <span class="operator">=</span> queueArray[front];</span><br><span class="line">            queueArray[front] = <span class="literal">null</span>;</span><br><span class="line">            front = (front + <span class="number">1</span>) % currentSize;</span><br><span class="line">            currentSize--;</span><br><span class="line">            <span class="keyword">return</span> number;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showQueue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxSize; i++) &#123;</span><br><span class="line">            System.out.println(queueArray[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyQueue</span> <span class="variable">myQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyQueue</span>();</span><br><span class="line">        myQueue.insert(<span class="number">1</span>);</span><br><span class="line">        myQueue.insert(<span class="number">2</span>);</span><br><span class="line">        myQueue.insert(<span class="number">3</span>);</span><br><span class="line">        myQueue.insert(<span class="number">4</span>);</span><br><span class="line">        myQueue.insert(<span class="number">5</span>);</span><br><span class="line">        myQueue.showQueue();</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">        myQueue.insert(<span class="number">6</span>);</span><br><span class="line">        myQueue.delete();</span><br><span class="line">        myQueue.delete();</span><br><span class="line">        myQueue.showQueue();</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">        myQueue.insert(<span class="number">6</span>);</span><br><span class="line">        myQueue.showQueue();</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>-Learning</category>
      </categories>
      <tags>
        <tag>-Java</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1</title>
    <url>/2023/06/10/leetcode/</url>
    <content><![CDATA[<h4 id="217-存在重复元素"><a href="#217-存在重复元素" class="headerlink" title="217. 存在重复元素"></a><a class="link"   href="https://leetcode.cn/problems/contains-duplicate/" >217. 存在重复元素 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><p>难度简单978收藏分享切换为英文接收动态反馈</p>
<p>给你一个整数数组 <code>nums</code> 。如果任一值在数组中出现 <strong>至少两次</strong> ，返回 <code>true</code> ；如果数组中每个元素互不相同，返回 <code>false</code> 。</p>
<p><strong>示例 1：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,2,3,1]</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 2：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,2,3,4]</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 3：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,1,1,3,3,4,3,2,4,2]</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure></div>

<p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 105</code></li>
<li><code>-109 &lt;= nums[i] &lt;= 109</code></li>
</ul>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[i+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h4 id="53-最大子数组和"><a href="#53-最大子数组和" class="headerlink" title="53. 最大子数组和"></a><a class="link"   href="https://leetcode.cn/problems/maximum-subarray/" >53. 最大子数组和 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><p>难度中等5966收藏分享切换为英文接收动态反馈</p>
<p>给你一个整数数组 <code>nums</code> ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p>
<p><strong>子数组</strong> 是数组中的一个连续部分。</p>
<p><strong>示例 1：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [-2,1,-3,4,-1,2,1,-5,4]</span><br><span class="line">输出：6</span><br><span class="line">解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 2：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 3：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [5,4,-1,7,8]</span><br><span class="line">输出：23</span><br></pre></td></tr></table></figure></div>

<p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 105</code></li>
<li><code>-104 &lt;= nums[i] &lt;= 104</code></li>
</ul>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pre</span> <span class="operator">=</span> <span class="number">0</span>, maxAns = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : nums) &#123;</span><br><span class="line">            pre = Math.max(pre + x, x);</span><br><span class="line">            maxAns = Math.max(maxAns, pre);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxAns;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>





<h4 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1. 两数之和"></a><a class="link"   href="https://leetcode.cn/problems/two-sum/" >1. 两数之和 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><p>难度简单16733收藏分享切换为英文接收动态反馈</p>
<p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出 <strong>和为目标值</strong> <em><code>target</code></em> 的那 <strong>两个</strong> 整数，并返回它们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>
<p>你可以按任意顺序返回答案。</p>
<p><strong>示例 1：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [2,7,11,15], target = 9</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 2：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [3,2,4], target = 6</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 3：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [3,3], target = 6</span><br><span class="line">输出：[0,1]</span><br></pre></td></tr></table></figure></div>

<p><strong>提示：</strong></p>
<ul>
<li><code>2 &lt;= nums.length &lt;= 104</code></li>
<li><code>-109 &lt;= nums[i] &lt;= 109</code></li>
<li><code>-109 &lt;= target &lt;= 109</code></li>
<li><strong>只会存在一个有效答案</strong></li>
</ul>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;<span class="comment">//暴力枚举法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> result[]=<span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;nums.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i]+nums[j]==target)&#123;</span><br><span class="line">                    result[<span class="number">0</span>]=i;</span><br><span class="line">                    result[<span class="number">1</span>]=j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>$$<br>时间复杂度O(N^2)<br>$$</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;<span class="comment">//哈希表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; hashtable = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hashtable.containsKey(target - nums[i])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;hashtable.get(target - nums[i]), i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            hashtable.put(nums[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h4 id="88-合并两个有序数组"><a href="#88-合并两个有序数组" class="headerlink" title="88. 合并两个有序数组"></a><a class="link"   href="https://leetcode.cn/problems/merge-sorted-array/" >88. 合并两个有序数组 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><p>难度简单1808收藏分享切换为英文接收动态反馈</p>
<p>给你两个按 <strong>非递减顺序</strong> 排列的整数数组 <code>nums1</code> 和 <code>nums2</code>，另有两个整数 <code>m</code> 和 <code>n</code> ，分别表示 <code>nums1</code> 和 <code>nums2</code> 中的元素数目。</p>
<p>请你 <strong>合并</strong> <code>nums2</code> 到 <code>nums1</code> 中，使合并后的数组同样按 <strong>非递减顺序</strong> 排列。</p>
<p><strong>注意：</strong>最终，合并后数组不应由函数返回，而是存储在数组 <code>nums1</code> 中。为了应对这种情况，<code>nums1</code> 的初始长度为 <code>m + n</code>，其中前 <code>m</code> 个元素表示应合并的元素，后 <code>n</code> 个元素为 <code>0</code> ，应忽略。<code>nums2</code> 的长度为 <code>n</code> 。</p>
<p><strong>示例 1：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3</span><br><span class="line">输出：[1,2,2,3,5,6]</span><br><span class="line">解释：需要合并 [1,2,3] 和 [2,5,6] 。</span><br><span class="line">合并结果是 [1,2,2,3,5,6] ，其中斜体加粗标注的为 nums1 中的元素。</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 2：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums1 = [1], m = 1, nums2 = [], n = 0</span><br><span class="line">输出：[1]</span><br><span class="line">解释：需要合并 [1] 和 [] 。</span><br><span class="line">合并结果是 [1] 。</span><br></pre></td></tr></table></figure></div>

<p><strong>示例 3：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums1 = [0], m = 0, nums2 = [1], n = 1</span><br><span class="line">输出：[1]</span><br><span class="line">解释：需要合并的数组是 [] 和 [1] 。</span><br><span class="line">合并结果是 [1] 。</span><br><span class="line">注意，因为 m = 0 ，所以 nums1 中没有元素。nums1 中仅存的 0 仅仅是为了确保合并结果可以顺利存放到 nums1 中。</span><br></pre></td></tr></table></figure></div>

<p><strong>提示：</strong></p>
<ul>
<li><code>nums1.length == m + n</code></li>
<li><code>nums2.length == n</code></li>
<li><code>0 &lt;= m, n &lt;= 200</code></li>
<li><code>1 &lt;= m + n &lt;= 200</code></li>
<li><code>-109 &lt;= nums1[i], nums2[j] &lt;= 109</code></li>
</ul>
<p><strong>进阶：</strong>你可以设计实现一个时间复杂度为 <code>O(m + n)</code> 的算法解决此问题吗？</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;<span class="comment">//直接合并后排序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span> m, <span class="type">int</span>[] nums2, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i != n; ++i) &#123;</span><br><span class="line">            nums1[m + i] = nums2[i];</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(nums1);<span class="comment">//对数组进行排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>$$<br>时间复杂度为<br>O((m+n)log(m+n))<br>$$</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;<span class="comment">//双指针</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span> m, <span class="type">int</span>[] nums2, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="number">0</span>, p2 = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] sorted = <span class="keyword">new</span> <span class="title class_">int</span>[m + n];</span><br><span class="line">        <span class="type">int</span> cur;</span><br><span class="line">        <span class="keyword">while</span> (p1 &lt; m || p2 &lt; n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p1 == m) &#123;</span><br><span class="line">                cur = nums2[p2++];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (p2 == n) &#123;</span><br><span class="line">                cur = nums1[p1++];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums1[p1] &lt; nums2[p2]) &#123;</span><br><span class="line">                cur = nums1[p1++];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cur = nums2[p2++];</span><br><span class="line">            &#125;</span><br><span class="line">            sorted[p1 + p2 - <span class="number">1</span>] = cur;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i != m + n; ++i) &#123;</span><br><span class="line">            nums1[i] = sorted[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>$$<br>时间复杂度为O(m+n)<br>$$</p>
]]></content>
      <categories>
        <category>-Learning</category>
      </categories>
      <tags>
        <tag>-Java</tag>
      </tags>
  </entry>
  <entry>
    <title>关于idea构建maven项目的时候遇到的问题</title>
    <url>/2023/06/10/%E5%85%B3%E4%BA%8Eidea%E6%9E%84%E5%BB%BAmaven%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol>
<li><code>org.apache.ibatis.exceptions.PersistenceException</code>：这是 MyBatis 抛出的顶级异常，表示持久化操作出现问题。</li>
<li><code>Error building SqlSession</code>：MyBatis 在构建 <code>SqlSession</code> 对象时遇到了错误。</li>
<li><code>Error parsing SQL Mapper Configuration</code>：解析 MyBatis XML 配置文件时出现错误。</li>
<li><code>Error parsing Mapper XML</code>：解析指定为 <code>mapper.xml</code> 的映射器 XML 文件时出现错误。</li>
<li><code>Error resolving class</code>：在解析映射器 XML 文件时，MyBatis 遇到了解析类的问题。</li>
<li><code>Could not resolve type alias &#39;User&#39;</code>：MyBatis 找不到名为 ‘User’ 的类型别名所对应的类。</li>
<li><code>ClassNotFoundException: Cannot find class: User</code>：在类路径中找不到在 MyBatis XML 文件中引用的 Java 类 <code>User</code>。</li>
</ol>
<h2 id="关于报错：Error-parsing-SQL-Mapper-Configuration"><a href="#关于报错：Error-parsing-SQL-Mapper-Configuration" class="headerlink" title="关于报错：Error parsing SQL Mapper Configuration."></a>关于报错：Error parsing SQL Mapper Configuration.</h2><p>会提示你是mapper.xml里出错了，当时的mapper文件内容为</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.mybatis.example.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM users WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<p>解决方案：把<code>resultType</code>里的<code>User</code>改成<code>org.example.User</code></p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.mybatis.example.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.User&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM users WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>问题得到了解决</p>
<h2 id="记录：mysql驱动的classname为：com-mysql-cj-jdbc-Driver"><a href="#记录：mysql驱动的classname为：com-mysql-cj-jdbc-Driver" class="headerlink" title="记录：mysql驱动的classname为：com.mysql.cj.jdbc.Driver"></a>记录：mysql驱动的classname为：com.mysql.cj.jdbc.Driver</h2><p>相关xml配置文件内容为</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/idea&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;debian-sys-maint&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>-Learning</category>
      </categories>
      <tags>
        <tag>-Difficult -Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu下Tomcat环境配置</title>
    <url>/2023/06/12/Ubuntu%E4%B8%8BTomcat%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="Ubuntu下Tomcat环境配置"><a href="#Ubuntu下Tomcat环境配置" class="headerlink" title="Ubuntu下Tomcat环境配置"></a>Ubuntu下Tomcat环境配置</h1><h2 id="首先安装java环境"><a href="#首先安装java环境" class="headerlink" title="首先安装java环境"></a>首先安装java环境</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install openjdk-17-jdk</span><br></pre></td></tr></table></figure></div>



<p>安装完成后，运行命令Java –version检查是否安装正确。命令将会打印Java的版本</p>
<p>成功安装会显示以下内容：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">openjdk version <span class="string">&quot;17.0.7&quot;</span> 2023-04-18</span><br><span class="line">OpenJDK Runtime Environment (build 17.0.7+7-Ubuntu-0ubuntu122.04.2)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 17.0.7+7-Ubuntu-0ubuntu122.04.2, mixed mode, sharing)</span><br></pre></td></tr></table></figure></div>



<p>以root运行Tomcat，具有安全风险。我们将创建普通<a class="link"   href="https://www.myfreax.com/how-to-create-users-in-linux-using-the-useradd-command/" >用户 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>运行Tomcat，配并将Tomcat用户的家目录设置为<code>/opt/tomcat</code>。</p>
<p>运行useradd命令<code>sudo useradd -m -U -d /opt/tomcat -s /bin/false tomcat</code></p>
<h2 id="下载tomcat并解压"><a href="#下载tomcat并解压" class="headerlink" title="下载tomcat并解压"></a>下载tomcat并解压</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">VERSION=10.1.9</span><br><span class="line"></span><br><span class="line">wget https://dlcdn.apache.org/tomcat/tomcat-10/v<span class="variable">$&#123;VERSION&#125;</span>/bin/apache-tomcat-<span class="variable">$&#123;VERSION&#125;</span>.tar.gz -P /tmp</span><br><span class="line"></span><br><span class="line">sudo tar -xf /tmp/apache-tomcat-<span class="variable">$&#123;VERSION&#125;</span>.tar.gz -C /opt/tomcat/</span><br></pre></td></tr></table></figure></div>



<p>Tomcat会定期进行更新。为了更好地控制版本和更新，我们将创建一个名为<code>latest</code>的<a class="link"   href="https://www.myfreax.com/how-to-create-symbolic-links-in-linux-using-the-ln-command/" >符号链接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，该链接指向Tomcat的安装目录。</p>
<p>运行<a class="link"   href="https://www.myfreax.com/chmod-command-in-linux/" >chmod命令 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>使<code>bin</code>目录中的shell脚本具有可执行权限，这些脚本用于启动和停止Tomcat。</p>
<p>将&#x2F;opt&#x2F;tomcat目录的所有权更改为tomcat用户和tomcat组，使tomcat用户可以访问 &#x2F;opt&#x2F;tomcat目录。运行命令<code>sudo chown -R tomcat: /opt/tomcat</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /opt/tomcat/apache-tomcat-<span class="variable">$&#123;VERSION&#125;</span> /opt/tomcat/latest</span><br><span class="line"></span><br><span class="line">sudo sh -c <span class="string">&#x27;chmod +x /opt/tomcat/latest/bin/*.sh&#x27;</span></span><br><span class="line">sudo <span class="built_in">chown</span> -R tomcat: /opt/tomcat</span><br></pre></td></tr></table></figure></div>





<h2 id="创建systemed服务单元"><a href="#创建systemed服务单元" class="headerlink" title="创建systemed服务单元"></a>创建systemed服务单元</h2><p>我们将其设置为服务运行，而不是手动启动和停止Tomcat服务器。</p>
<p>打开您喜欢的<a class="link"   href="https://www.myfreax.com/tag/vim/" >文本编辑器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，创建文件tomcat.service在&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;目录。在本教程中我们将使用<a class="link"   href="https://www.myfreax.com/the-basis-of-the-linux-vim-command/" >vim创建文件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>完成后，<a class="link"   href="https://www.myfreax.com/how-to-save-file-in-vim-quit-editor/" >保存文件并退出vim <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。然后运行<code>systemctl daemon-reload</code>命令重新加载配置文件。</p>
<p>运行命令<code>sudo systemctl enable --now tomcat</code>启动Tomcat服务并自动启动。<code>systemctl restart tomcat</code>命令重启tomcat服务。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/tomcat.service</span><br></pre></td></tr></table></figure></div>

<p>输入以下内容</p>
<div class="highlight-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Tomcat <span class="number">9</span> servlet container</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"></span><br><span class="line"><span class="attr">User</span>=tomcat</span><br><span class="line"><span class="attr">Group</span>=tomcat</span><br><span class="line"></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64&quot;</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;JAVA_OPTS=-Djava.security.egd=file:///dev/urandom -Djava.awt.headless=true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;CATALINA_BASE=/opt/tomcat/latest&quot;</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;CATALINA_HOME=/opt/tomcat/latest&quot;</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;CATALINA_PID=/opt/tomcat/latest/temp/tomcat.pid&quot;</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ExecStart</span>=/opt/tomcat/latest/bin/startup.sh</span><br><span class="line"><span class="attr">ExecStop</span>=/opt/tomcat/latest/bin/shutdown.sh</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></div>





<p>启动</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now tomcat</span><br><span class="line">sudo systemctl restart tomcat</span><br><span class="line">sudo systemctl status tomcat</span><br></pre></td></tr></table></figure></div>





<h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 8080/tcp</span><br></pre></td></tr></table></figure></div>



<p>至此，您应该能够使用Web浏览器访问Tomcat。由于我们尚未创建用户，因此无法访问Tomcat管理界面。</p>
<p>我们可以在<code>tomcat-users.xml</code>文件中定义Tomcat用户和角色。继续使用vim编辑文件tomcat-users.xml。</p>
<p>创建tomcat Web用户manager-gui和admin-gui，如下所示。确保密码更改为更安全的密码。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /opt/tomcat/latest/conf/tomcat-users.xml</span><br></pre></td></tr></table></figure></div>



<p>只要复制users里面的三行就可以了</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tomcat-users</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Comments</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">password</span>=<span class="string">&quot;admin_password&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;admin-gui,manager-gui&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tomcat-users</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h2 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h2><p>可以打开URL <code>http://&lt;your_domain_or_IP_address&gt;:8080/manager/html</code>找到它。</p>
]]></content>
      <categories>
        <category>-Learning</category>
      </categories>
      <tags>
        <tag>-Difficult -Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Http协议相关知识点</title>
    <url>/2023/06/12/Http%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="HTTP-x2F-HTTPS-简介"><a href="#HTTP-x2F-HTTPS-简介" class="headerlink" title="HTTP&#x2F;HTTPS 简介"></a>HTTP&#x2F;HTTPS 简介</h1><p>（摘自菜鸟教程）</p>
<p>HTTP 协议是 Hyper Text Transfer Protocol（超文本传输协议）的缩写，是用于从万维网（ WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。</p>
<p>HTTP 是一个基于 TCP&#x2F;IP 通信协议来传递数据（HTML 文件、图片文件、查询结果等）。</p>
<p>HTTPS 协议是 HyperText Transfer Protocol Secure（超文本传输安全协议）的缩写，是一种通过计算机网络进行安全通信的传输协议。</p>
<p>HTTPS 经由 HTTP 进行通信，但利用 SSL&#x2F;TLS 来加密数据包，HTTPS 开发的主要目的，是提供对网站服务器的身份认证，保护交换资料的隐私与完整性。</p>
<p>HTTP 的 URL 是由 <strong>http:&#x2F;&#x2F;</strong> 起始与默认使用端口 <strong>80</strong>，而 HTTPS 的 URL 则是由 <strong>https:&#x2F;&#x2F;</strong> 起始与默认使用端口<strong>443</strong>。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://www.runoob.com/wp-content/uploads/2013/11/1_5J6ULfBAvgLF8PBM4B__Qw.jpeg"
                      alt="img"
                ></p>
<h1 id="HTTP-请求方法"><a href="#HTTP-请求方法" class="headerlink" title="HTTP 请求方法"></a>HTTP 请求方法</h1><p>根据 HTTP 标准，HTTP 请求可以使用多种请求方法。</p>
<p>HTTP1.0 定义了三种请求方法： GET, POST 和 HEAD 方法。</p>
<p>HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。</p>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">方法</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">GET</td>
<td align="left">请求指定的页面信息，并返回实体主体。</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">HEAD</td>
<td align="left">类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">POST</td>
<td align="left">向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和&#x2F;或已有资源的修改。</td>
</tr>
<tr>
<td align="left">4</td>
<td align="left">PUT</td>
<td align="left">从客户端向服务器传送的数据取代指定的文档的内容。</td>
</tr>
<tr>
<td align="left">5</td>
<td align="left">DELETE</td>
<td align="left">请求服务器删除指定的页面。</td>
</tr>
<tr>
<td align="left">6</td>
<td align="left">CONNECT</td>
<td align="left">HTTP&#x2F;1.1 协议中预留给能够将连接改为管道方式的代理服务器。</td>
</tr>
<tr>
<td align="left">7</td>
<td align="left">OPTIONS</td>
<td align="left">允许客户端查看服务器的性能。</td>
</tr>
<tr>
<td align="left">8</td>
<td align="left">TRACE</td>
<td align="left">回显服务器收到的请求，主要用于测试或诊断。</td>
</tr>
<tr>
<td align="left">9</td>
<td align="left">PATCH</td>
<td align="left">是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td>
</tr>
</tbody></table>
<h1 id="HTTP-响应头信息"><a href="#HTTP-响应头信息" class="headerlink" title="HTTP 响应头信息"></a>HTTP 响应头信息</h1><p>HTTP请求头提供了关于请求，响应或者其他的发送实体的信息。</p>
<p>在本章节中我们将具体来介绍HTTP响应头信息。</p>
<table>
<thead>
<tr>
<th align="left">应答头</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Allow</td>
<td align="left">服务器支持哪些请求方法（如GET、POST等）。</td>
</tr>
<tr>
<td align="left">Content-Encoding</td>
<td align="left">文档的编码（Encode）方法。只有在解码之后才可以得到Content-Type头指定的内容类型。利用gzip压缩文档能够显著地减少HTML文档的下载时间。Java的GZIPOutputStream可以很方便地进行gzip压缩，但只有Unix上的Netscape和Windows上的IE 4、IE 5才支持它。因此，Servlet应该通过查看Accept-Encoding头（即request.getHeader(“Accept-Encoding”)）检查浏览器是否支持gzip，为支持gzip的浏览器返回经gzip压缩的HTML页面，为其他浏览器返回普通页面。</td>
</tr>
<tr>
<td align="left">Content-Length</td>
<td align="left">表示内容长度。只有当浏览器使用持久HTTP连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入 ByteArrayOutputStream，完成后查看其大小，然后把该值放入Content-Length头，最后通过byteArrayStream.writeTo(response.getOutputStream()发送内容。</td>
</tr>
<tr>
<td align="left">Content-Type</td>
<td align="left">表示后面的文档属于什么MIME类型。Servlet默认为text&#x2F;plain，但通常需要显式地指定为text&#x2F;html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentType。</td>
</tr>
<tr>
<td align="left">Date</td>
<td align="left">当前的GMT时间。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦。</td>
</tr>
<tr>
<td align="left">Expires</td>
<td align="left">应该在什么时候认为文档已经过期，从而不再缓存它？</td>
</tr>
<tr>
<td align="left">Last-Modified</td>
<td align="left">文档的最后改动时间。客户可以通过If-Modified-Since请求头提供一个日期，该请求将被视为一个条件GET，只有改动时间迟于指定时间的文档才会返回，否则返回一个304（Not Modified）状态。Last-Modified也可用setDateHeader方法来设置。</td>
</tr>
<tr>
<td align="left">Location</td>
<td align="left">表示客户应当到哪里去提取文档。Location通常不是直接设置的，而是通过HttpServletResponse的sendRedirect方法，该方法同时设置状态代码为302。</td>
</tr>
<tr>
<td align="left">Refresh</td>
<td align="left">表示浏览器应该在多少时间之后刷新文档，以秒计。除了刷新当前文档之外，你还可以通过setHeader(“Refresh”, “5; URL&#x3D;<a class="link"   href="http://host/path%22)%E8%AE%A9%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%BB%E5%8F%96%E6%8C%87%E5%AE%9A%E7%9A%84%E9%A1%B5%E9%9D%A2%E3%80%82" >http://host/path&quot;)让浏览器读取指定的页面。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 注意这种功能通常是通过设置HTML页面HEAD区的＜META HTTP-EQUIV&#x3D;”Refresh” CONTENT&#x3D;”5;URL&#x3D;<a class="link"   href="http://host/path%22%EF%BC%9E%E5%AE%9E%E7%8E%B0%EF%BC%8C%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%E6%88%96%E9%87%8D%E5%AE%9A%E5%90%91%E5%AF%B9%E4%BA%8E%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8CGI%E6%88%96Servlet%E7%9A%84HTML%E7%BC%96%E5%86%99%E8%80%85%E5%8D%81%E5%88%86%E9%87%8D%E8%A6%81%E3%80%82%E4%BD%86%E6%98%AF%EF%BC%8C%E5%AF%B9%E4%BA%8EServlet%E6%9D%A5%E8%AF%B4%EF%BC%8C%E7%9B%B4%E6%8E%A5%E8%AE%BE%E7%BD%AERefresh%E5%A4%B4%E6%9B%B4%E5%8A%A0%E6%96%B9%E4%BE%BF%E3%80%82" >http://host/path&quot;＞实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>  注意Refresh的意义是”N秒之后刷新本页面或访问指定页面”，而不是”每隔N秒刷新本页面或访问指定页面”。因此，连续刷新要求每次都发送一个Refresh头，而发送204状态代码则可以阻止浏览器继续刷新，不管是使用Refresh头还是＜META HTTP-EQUIV&#x3D;”Refresh” …＞。  注意Refresh头不属于HTTP 1.1正式规范的一部分，而是一个扩展，但Netscape和IE都支持它。</td>
</tr>
<tr>
<td align="left">Server</td>
<td align="left">服务器名字。Servlet一般不设置这个值，而是由Web服务器自己设置。</td>
</tr>
<tr>
<td align="left">Set-Cookie</td>
<td align="left">设置和页面关联的Cookie。Servlet不应使用response.setHeader(“Set-Cookie”, …)，而是应使用HttpServletResponse提供的专用方法addCookie。参见下文有关Cookie设置的讨论。</td>
</tr>
<tr>
<td align="left">WWW-Authenticate</td>
<td align="left">客户应该在Authorization头中提供什么类型的授权信息？在包含401（Unauthorized）状态行的应答中这个头是必需的。例如，response.setHeader(“WWW-Authenticate”, “BASIC realm&#x3D;＼”executives＼””)。 注意Servlet一般不进行这方面的处理，而是让Web服务器的专门机制来控制受密码保护页面的访问（例如.htaccess）。</td>
</tr>
</tbody></table>
<h1 id="HTTP-状态码"><a href="#HTTP-状态码" class="headerlink" title="HTTP 状态码"></a>HTTP 状态码</h1><p>当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含 HTTP 状态码的信息头（server header）用以响应浏览器的请求。</p>
<p>HTTP 状态码的英文为 <strong>HTTP Status Code</strong>。。</p>
<p>下面是常见的 HTTP 状态码：</p>
<ul>
<li>200 - 请求成功</li>
<li>301 - 资源（网页等）被永久转移到其它URL</li>
<li>404 - 请求的资源（网页等）不存在</li>
<li>500 - 内部服务器错误</li>
</ul>
<h2 id="HTTP-状态码分类"><a href="#HTTP-状态码分类" class="headerlink" title="HTTP 状态码分类"></a>HTTP 状态码分类</h2><p>HTTP 状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型。响应分为五类：信息响应(100–199)，成功响应(200–299)，重定向(300–399)，客户端错误(400–499)和服务器错误 (500–599)：</p>
<table>
<thead>
<tr>
<th align="left">分类</th>
<th align="left">分类描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1**</td>
<td align="left">信息，服务器收到请求，需要请求者继续执行操作</td>
</tr>
<tr>
<td align="left">2**</td>
<td align="left">成功，操作被成功接收并处理</td>
</tr>
<tr>
<td align="left">3**</td>
<td align="left">重定向，需要进一步的操作以完成请求</td>
</tr>
<tr>
<td align="left">4**</td>
<td align="left">客户端错误，请求包含语法错误或无法完成请求</td>
</tr>
<tr>
<td align="left">5**</td>
<td align="left">服务器错误，服务器在处理请求的过程中发生了错误</td>
</tr>
</tbody></table>
<p>HTTP状态码列表:</p>
<table>
<thead>
<tr>
<th align="left">状态码</th>
<th align="left">状态码英文名称</th>
<th align="left">中文描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">100</td>
<td align="left">Continue</td>
<td align="left">继续。客户端应继续其请求</td>
</tr>
<tr>
<td align="left">101</td>
<td align="left">Switching Protocols</td>
<td align="left">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">200</td>
<td align="left">OK</td>
<td align="left">请求成功。一般用于GET与POST请求</td>
</tr>
<tr>
<td align="left">201</td>
<td align="left">Created</td>
<td align="left">已创建。成功请求并创建了新的资源</td>
</tr>
<tr>
<td align="left">202</td>
<td align="left">Accepted</td>
<td align="left">已接受。已经接受请求，但未处理完成</td>
</tr>
<tr>
<td align="left">203</td>
<td align="left">Non-Authoritative Information</td>
<td align="left">非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td>
</tr>
<tr>
<td align="left">204</td>
<td align="left">No Content</td>
<td align="left">无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td>
</tr>
<tr>
<td align="left">205</td>
<td align="left">Reset Content</td>
<td align="left">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td>
</tr>
<tr>
<td align="left">206</td>
<td align="left">Partial Content</td>
<td align="left">部分内容。服务器成功处理了部分GET请求</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">300</td>
<td align="left">Multiple Choices</td>
<td align="left">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td>
</tr>
<tr>
<td align="left">301</td>
<td align="left">Moved Permanently</td>
<td align="left">永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td>
</tr>
<tr>
<td align="left">302</td>
<td align="left">Found</td>
<td align="left">临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td>
</tr>
<tr>
<td align="left">303</td>
<td align="left">See Other</td>
<td align="left">查看其它地址。与301类似。使用GET和POST请求查看</td>
</tr>
<tr>
<td align="left">304</td>
<td align="left">Not Modified</td>
<td align="left">未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td>
</tr>
<tr>
<td align="left">305</td>
<td align="left">Use Proxy</td>
<td align="left">使用代理。所请求的资源必须通过代理访问</td>
</tr>
<tr>
<td align="left">306</td>
<td align="left">Unused</td>
<td align="left">已经被废弃的HTTP状态码</td>
</tr>
<tr>
<td align="left">307</td>
<td align="left">Temporary Redirect</td>
<td align="left">临时重定向。与302类似。使用GET请求重定向</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">400</td>
<td align="left">Bad Request</td>
<td align="left">客户端请求的语法错误，服务器无法理解</td>
</tr>
<tr>
<td align="left">401</td>
<td align="left">Unauthorized</td>
<td align="left">请求要求用户的身份认证</td>
</tr>
<tr>
<td align="left">402</td>
<td align="left">Payment Required</td>
<td align="left">保留，将来使用</td>
</tr>
<tr>
<td align="left">403</td>
<td align="left">Forbidden</td>
<td align="left">服务器理解请求客户端的请求，但是拒绝执行此请求</td>
</tr>
<tr>
<td align="left">404</td>
<td align="left">Not Found</td>
<td align="left">服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td>
</tr>
<tr>
<td align="left">405</td>
<td align="left">Method Not Allowed</td>
<td align="left">客户端请求中的方法被禁止</td>
</tr>
<tr>
<td align="left">406</td>
<td align="left">Not Acceptable</td>
<td align="left">服务器无法根据客户端请求的内容特性完成请求</td>
</tr>
<tr>
<td align="left">407</td>
<td align="left">Proxy Authentication Required</td>
<td align="left">请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td>
</tr>
<tr>
<td align="left">408</td>
<td align="left">Request Time-out</td>
<td align="left">服务器等待客户端发送的请求时间过长，超时</td>
</tr>
<tr>
<td align="left">409</td>
<td align="left">Conflict</td>
<td align="left">服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td>
</tr>
<tr>
<td align="left">410</td>
<td align="left">Gone</td>
<td align="left">客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td>
</tr>
<tr>
<td align="left">411</td>
<td align="left">Length Required</td>
<td align="left">服务器无法处理客户端发送的不带Content-Length的请求信息</td>
</tr>
<tr>
<td align="left">412</td>
<td align="left">Precondition Failed</td>
<td align="left">客户端请求信息的先决条件错误</td>
</tr>
<tr>
<td align="left">413</td>
<td align="left">Request Entity Too Large</td>
<td align="left">由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td>
</tr>
<tr>
<td align="left">414</td>
<td align="left">Request-URI Too Large</td>
<td align="left">请求的URI过长（URI通常为网址），服务器无法处理</td>
</tr>
<tr>
<td align="left">415</td>
<td align="left">Unsupported Media Type</td>
<td align="left">服务器无法处理请求附带的媒体格式</td>
</tr>
<tr>
<td align="left">416</td>
<td align="left">Requested range not satisfiable</td>
<td align="left">客户端请求的范围无效</td>
</tr>
<tr>
<td align="left">417</td>
<td align="left">Expectation Failed</td>
<td align="left">服务器无法满足Expect的请求头信息</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">500</td>
<td align="left">Internal Server Error</td>
<td align="left">服务器内部错误，无法完成请求</td>
</tr>
<tr>
<td align="left">501</td>
<td align="left">Not Implemented</td>
<td align="left">服务器不支持请求的功能，无法完成请求</td>
</tr>
<tr>
<td align="left">502</td>
<td align="left">Bad Gateway</td>
<td align="left">作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td>
</tr>
<tr>
<td align="left">503</td>
<td align="left">Service Unavailable</td>
<td align="left">由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td>
</tr>
<tr>
<td align="left">504</td>
<td align="left">Gateway Time-out</td>
<td align="left">充当网关或代理的服务器，未及时从远端服务器获取请求</td>
</tr>
<tr>
<td align="left">505</td>
<td align="left">HTTP Version not supported</td>
<td align="left">服务器不支持请求的HTTP协议的版本，无法完成处理</td>
</tr>
</tbody></table>
<h1 id="HTTP-content-type"><a href="#HTTP-content-type" class="headerlink" title="HTTP content-type"></a>HTTP content-type</h1><p>Content-Type（内容类型），一般是指网页中存在的 Content-Type，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件，这就是经常看到一些 PHP 网页点击的结果却是下载一个文件或一张图片的原因。</p>
<p>Content-Type 标头告诉客户端实际返回的内容的内容类型。</p>
<p>语法格式：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Type: multipart/form-data; boundary=something</span><br></pre></td></tr></table></figure></div>

<p>实例：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://www.runoob.com/wp-content/uploads/2014/06/F7E193D6-3C08-4B97-BAF2-FF340DAA5C6E.jpg"
                      alt="img"
                ></p>
<p>常见的媒体格式类型如下：</p>
<ul>
<li>text&#x2F;html ： HTML格式</li>
<li>text&#x2F;plain ：纯文本格式</li>
<li>text&#x2F;xml ： XML格式</li>
<li>image&#x2F;gif ：gif图片格式</li>
<li>image&#x2F;jpeg ：jpg图片格式</li>
<li>image&#x2F;png：png图片格式</li>
</ul>
<p>以application开头的媒体格式类型：</p>
<ul>
<li>application&#x2F;xhtml+xml ：XHTML格式</li>
<li>application&#x2F;xml： XML数据格式</li>
<li>application&#x2F;atom+xml ：Atom XML聚合格式</li>
<li>application&#x2F;json： JSON数据格式</li>
<li>application&#x2F;pdf：pdf格式</li>
<li>application&#x2F;msword ： Word文档格式</li>
<li>application&#x2F;octet-stream ： 二进制流数据（如常见的文件下载）</li>
<li>application&#x2F;x-www-form-urlencoded ： <form encType=””>中默认的encType，form表单数据被编码为key&#x2F;value格式发送到服务器（表单默认的提交数据的格式）</li>
</ul>
<p>另外一种常见的媒体格式是上传文件之时使用的：</p>
<ul>
<li>multipart&#x2F;form-data ： 需要在表单中进行文件上传时，就需要使用该格式</li>
</ul>
<hr>
<h2 id="HTTP-content-type-对照表"><a href="#HTTP-content-type-对照表" class="headerlink" title="HTTP content-type 对照表"></a>HTTP content-type 对照表</h2><table>
<thead>
<tr>
<th align="left">文件扩展名</th>
<th align="left">Content-Type(Mime-Type)</th>
<th align="left">文件扩展名</th>
<th align="left">Content-Type(Mime-Type)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">.*（ 二进制流，不知道下载文件类型）</td>
<td align="left">application&#x2F;octet-stream</td>
<td align="left">.tif</td>
<td align="left">image&#x2F;tiff</td>
</tr>
<tr>
<td align="left">.001</td>
<td align="left">application&#x2F;x-001</td>
<td align="left">.301</td>
<td align="left">application&#x2F;x-301</td>
</tr>
<tr>
<td align="left">.323</td>
<td align="left">text&#x2F;h323</td>
<td align="left">.906</td>
<td align="left">application&#x2F;x-906</td>
</tr>
<tr>
<td align="left">.907</td>
<td align="left">drawing&#x2F;907</td>
<td align="left">.a11</td>
<td align="left">application&#x2F;x-a11</td>
</tr>
<tr>
<td align="left">.acp</td>
<td align="left">audio&#x2F;x-mei-aac</td>
<td align="left">.ai</td>
<td align="left">application&#x2F;postscript</td>
</tr>
<tr>
<td align="left">.aif</td>
<td align="left">audio&#x2F;aiff</td>
<td align="left">.aifc</td>
<td align="left">audio&#x2F;aiff</td>
</tr>
<tr>
<td align="left">.aiff</td>
<td align="left">audio&#x2F;aiff</td>
<td align="left">.anv</td>
<td align="left">application&#x2F;x-anv</td>
</tr>
<tr>
<td align="left">.asa</td>
<td align="left">text&#x2F;asa</td>
<td align="left">.asf</td>
<td align="left">video&#x2F;x-ms-asf</td>
</tr>
<tr>
<td align="left">.asp</td>
<td align="left">text&#x2F;asp</td>
<td align="left">.asx</td>
<td align="left">video&#x2F;x-ms-asf</td>
</tr>
<tr>
<td align="left">.au</td>
<td align="left">audio&#x2F;basic</td>
<td align="left">.avi</td>
<td align="left">video&#x2F;avi</td>
</tr>
<tr>
<td align="left">.awf</td>
<td align="left">application&#x2F;vnd.adobe.workflow</td>
<td align="left">.biz</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.bmp</td>
<td align="left">application&#x2F;x-bmp</td>
<td align="left">.bot</td>
<td align="left">application&#x2F;x-bot</td>
</tr>
<tr>
<td align="left">.c4t</td>
<td align="left">application&#x2F;x-c4t</td>
<td align="left">.c90</td>
<td align="left">application&#x2F;x-c90</td>
</tr>
<tr>
<td align="left">.cal</td>
<td align="left">application&#x2F;x-cals</td>
<td align="left">.cat</td>
<td align="left">application&#x2F;vnd.ms-pki.seccat</td>
</tr>
<tr>
<td align="left">.cdf</td>
<td align="left">application&#x2F;x-netcdf</td>
<td align="left">.cdr</td>
<td align="left">application&#x2F;x-cdr</td>
</tr>
<tr>
<td align="left">.cel</td>
<td align="left">application&#x2F;x-cel</td>
<td align="left">.cer</td>
<td align="left">application&#x2F;x-x509-ca-cert</td>
</tr>
<tr>
<td align="left">.cg4</td>
<td align="left">application&#x2F;x-g4</td>
<td align="left">.cgm</td>
<td align="left">application&#x2F;x-cgm</td>
</tr>
<tr>
<td align="left">.cit</td>
<td align="left">application&#x2F;x-cit</td>
<td align="left">.class</td>
<td align="left">java&#x2F;*</td>
</tr>
<tr>
<td align="left">.cml</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.cmp</td>
<td align="left">application&#x2F;x-cmp</td>
</tr>
<tr>
<td align="left">.cmx</td>
<td align="left">application&#x2F;x-cmx</td>
<td align="left">.cot</td>
<td align="left">application&#x2F;x-cot</td>
</tr>
<tr>
<td align="left">.crl</td>
<td align="left">application&#x2F;pkix-crl</td>
<td align="left">.crt</td>
<td align="left">application&#x2F;x-x509-ca-cert</td>
</tr>
<tr>
<td align="left">.csi</td>
<td align="left">application&#x2F;x-csi</td>
<td align="left">.css</td>
<td align="left">text&#x2F;css</td>
</tr>
<tr>
<td align="left">.cut</td>
<td align="left">application&#x2F;x-cut</td>
<td align="left">.dbf</td>
<td align="left">application&#x2F;x-dbf</td>
</tr>
<tr>
<td align="left">.dbm</td>
<td align="left">application&#x2F;x-dbm</td>
<td align="left">.dbx</td>
<td align="left">application&#x2F;x-dbx</td>
</tr>
<tr>
<td align="left">.dcd</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.dcx</td>
<td align="left">application&#x2F;x-dcx</td>
</tr>
<tr>
<td align="left">.der</td>
<td align="left">application&#x2F;x-x509-ca-cert</td>
<td align="left">.dgn</td>
<td align="left">application&#x2F;x-dgn</td>
</tr>
<tr>
<td align="left">.dib</td>
<td align="left">application&#x2F;x-dib</td>
<td align="left">.dll</td>
<td align="left">application&#x2F;x-msdownload</td>
</tr>
<tr>
<td align="left">.doc</td>
<td align="left">application&#x2F;msword</td>
<td align="left">.dot</td>
<td align="left">application&#x2F;msword</td>
</tr>
<tr>
<td align="left">.drw</td>
<td align="left">application&#x2F;x-drw</td>
<td align="left">.dtd</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.dwf</td>
<td align="left">Model&#x2F;vnd.dwf</td>
<td align="left">.dwf</td>
<td align="left">application&#x2F;x-dwf</td>
</tr>
<tr>
<td align="left">.dwg</td>
<td align="left">application&#x2F;x-dwg</td>
<td align="left">.dxb</td>
<td align="left">application&#x2F;x-dxb</td>
</tr>
<tr>
<td align="left">.dxf</td>
<td align="left">application&#x2F;x-dxf</td>
<td align="left">.edn</td>
<td align="left">application&#x2F;vnd.adobe.edn</td>
</tr>
<tr>
<td align="left">.emf</td>
<td align="left">application&#x2F;x-emf</td>
<td align="left">.eml</td>
<td align="left">message&#x2F;rfc822</td>
</tr>
<tr>
<td align="left">.ent</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.epi</td>
<td align="left">application&#x2F;x-epi</td>
</tr>
<tr>
<td align="left">.eps</td>
<td align="left">application&#x2F;x-ps</td>
<td align="left">.eps</td>
<td align="left">application&#x2F;postscript</td>
</tr>
<tr>
<td align="left">.etd</td>
<td align="left">application&#x2F;x-ebx</td>
<td align="left">.exe</td>
<td align="left">application&#x2F;x-msdownload</td>
</tr>
<tr>
<td align="left">.fax</td>
<td align="left">image&#x2F;fax</td>
<td align="left">.fdf</td>
<td align="left">application&#x2F;vnd.fdf</td>
</tr>
<tr>
<td align="left">.fif</td>
<td align="left">application&#x2F;fractals</td>
<td align="left">.fo</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.frm</td>
<td align="left">application&#x2F;x-frm</td>
<td align="left">.g4</td>
<td align="left">application&#x2F;x-g4</td>
</tr>
<tr>
<td align="left">.gbr</td>
<td align="left">application&#x2F;x-gbr</td>
<td align="left">.</td>
<td align="left">application&#x2F;x-</td>
</tr>
<tr>
<td align="left">.gif</td>
<td align="left">image&#x2F;gif</td>
<td align="left">.gl2</td>
<td align="left">application&#x2F;x-gl2</td>
</tr>
<tr>
<td align="left">.gp4</td>
<td align="left">application&#x2F;x-gp4</td>
<td align="left">.hgl</td>
<td align="left">application&#x2F;x-hgl</td>
</tr>
<tr>
<td align="left">.hmr</td>
<td align="left">application&#x2F;x-hmr</td>
<td align="left">.hpg</td>
<td align="left">application&#x2F;x-hpgl</td>
</tr>
<tr>
<td align="left">.hpl</td>
<td align="left">application&#x2F;x-hpl</td>
<td align="left">.hqx</td>
<td align="left">application&#x2F;mac-binhex40</td>
</tr>
<tr>
<td align="left">.hrf</td>
<td align="left">application&#x2F;x-hrf</td>
<td align="left">.hta</td>
<td align="left">application&#x2F;hta</td>
</tr>
<tr>
<td align="left">.htc</td>
<td align="left">text&#x2F;x-component</td>
<td align="left">.htm</td>
<td align="left">text&#x2F;html</td>
</tr>
<tr>
<td align="left">.html</td>
<td align="left">text&#x2F;html</td>
<td align="left">.htt</td>
<td align="left">text&#x2F;webviewhtml</td>
</tr>
<tr>
<td align="left">.htx</td>
<td align="left">text&#x2F;html</td>
<td align="left">.icb</td>
<td align="left">application&#x2F;x-icb</td>
</tr>
<tr>
<td align="left">.ico</td>
<td align="left">image&#x2F;x-icon</td>
<td align="left">.ico</td>
<td align="left">application&#x2F;x-ico</td>
</tr>
<tr>
<td align="left">.iff</td>
<td align="left">application&#x2F;x-iff</td>
<td align="left">.ig4</td>
<td align="left">application&#x2F;x-g4</td>
</tr>
<tr>
<td align="left">.igs</td>
<td align="left">application&#x2F;x-igs</td>
<td align="left">.iii</td>
<td align="left">application&#x2F;x-iphone</td>
</tr>
<tr>
<td align="left">.img</td>
<td align="left">application&#x2F;x-img</td>
<td align="left">.ins</td>
<td align="left">application&#x2F;x-internet-signup</td>
</tr>
<tr>
<td align="left">.isp</td>
<td align="left">application&#x2F;x-internet-signup</td>
<td align="left">.IVF</td>
<td align="left">video&#x2F;x-ivf</td>
</tr>
<tr>
<td align="left">.java</td>
<td align="left">java&#x2F;*</td>
<td align="left">.jfif</td>
<td align="left">image&#x2F;jpeg</td>
</tr>
<tr>
<td align="left">.jpe</td>
<td align="left">image&#x2F;jpeg</td>
<td align="left">.jpe</td>
<td align="left">application&#x2F;x-jpe</td>
</tr>
<tr>
<td align="left">.jpeg</td>
<td align="left">image&#x2F;jpeg</td>
<td align="left">.jpg</td>
<td align="left">image&#x2F;jpeg</td>
</tr>
<tr>
<td align="left">.jpg</td>
<td align="left">application&#x2F;x-jpg</td>
<td align="left">.js</td>
<td align="left">application&#x2F;x-javascript</td>
</tr>
<tr>
<td align="left">.jsp</td>
<td align="left">text&#x2F;html</td>
<td align="left">.la1</td>
<td align="left">audio&#x2F;x-liquid-file</td>
</tr>
<tr>
<td align="left">.lar</td>
<td align="left">application&#x2F;x-laplayer-reg</td>
<td align="left">.latex</td>
<td align="left">application&#x2F;x-latex</td>
</tr>
<tr>
<td align="left">.lavs</td>
<td align="left">audio&#x2F;x-liquid-secure</td>
<td align="left">.lbm</td>
<td align="left">application&#x2F;x-lbm</td>
</tr>
<tr>
<td align="left">.lmsff</td>
<td align="left">audio&#x2F;x-la-lms</td>
<td align="left">.ls</td>
<td align="left">application&#x2F;x-javascript</td>
</tr>
<tr>
<td align="left">.ltr</td>
<td align="left">application&#x2F;x-ltr</td>
<td align="left">.m1v</td>
<td align="left">video&#x2F;x-mpeg</td>
</tr>
<tr>
<td align="left">.m2v</td>
<td align="left">video&#x2F;x-mpeg</td>
<td align="left">.m3u</td>
<td align="left">audio&#x2F;mpegurl</td>
</tr>
<tr>
<td align="left">.m4e</td>
<td align="left">video&#x2F;mpeg4</td>
<td align="left">.mac</td>
<td align="left">application&#x2F;x-mac</td>
</tr>
<tr>
<td align="left">.man</td>
<td align="left">application&#x2F;x-troff-man</td>
<td align="left">.math</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.mdb</td>
<td align="left">application&#x2F;msaccess</td>
<td align="left">.mdb</td>
<td align="left">application&#x2F;x-mdb</td>
</tr>
<tr>
<td align="left">.mfp</td>
<td align="left">application&#x2F;x-shockwave-flash</td>
<td align="left">.mht</td>
<td align="left">message&#x2F;rfc822</td>
</tr>
<tr>
<td align="left">.mhtml</td>
<td align="left">message&#x2F;rfc822</td>
<td align="left">.mi</td>
<td align="left">application&#x2F;x-mi</td>
</tr>
<tr>
<td align="left">.mid</td>
<td align="left">audio&#x2F;mid</td>
<td align="left">.midi</td>
<td align="left">audio&#x2F;mid</td>
</tr>
<tr>
<td align="left">.mil</td>
<td align="left">application&#x2F;x-mil</td>
<td align="left">.mml</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.mnd</td>
<td align="left">audio&#x2F;x-musicnet-download</td>
<td align="left">.mns</td>
<td align="left">audio&#x2F;x-musicnet-stream</td>
</tr>
<tr>
<td align="left">.mocha</td>
<td align="left">application&#x2F;x-javascript</td>
<td align="left">.movie</td>
<td align="left">video&#x2F;x-sgi-movie</td>
</tr>
<tr>
<td align="left">.mp1</td>
<td align="left">audio&#x2F;mp1</td>
<td align="left">.mp2</td>
<td align="left">audio&#x2F;mp2</td>
</tr>
<tr>
<td align="left">.mp2v</td>
<td align="left">video&#x2F;mpeg</td>
<td align="left">.mp3</td>
<td align="left">audio&#x2F;mp3</td>
</tr>
<tr>
<td align="left">.mp4</td>
<td align="left">video&#x2F;mpeg4</td>
<td align="left">.mpa</td>
<td align="left">video&#x2F;x-mpg</td>
</tr>
<tr>
<td align="left">.mpd</td>
<td align="left">application&#x2F;vnd.ms-project</td>
<td align="left">.mpe</td>
<td align="left">video&#x2F;x-mpeg</td>
</tr>
<tr>
<td align="left">.mpeg</td>
<td align="left">video&#x2F;mpg</td>
<td align="left">.mpg</td>
<td align="left">video&#x2F;mpg</td>
</tr>
<tr>
<td align="left">.mpga</td>
<td align="left">audio&#x2F;rn-mpeg</td>
<td align="left">.mpp</td>
<td align="left">application&#x2F;vnd.ms-project</td>
</tr>
<tr>
<td align="left">.mps</td>
<td align="left">video&#x2F;x-mpeg</td>
<td align="left">.mpt</td>
<td align="left">application&#x2F;vnd.ms-project</td>
</tr>
<tr>
<td align="left">.mpv</td>
<td align="left">video&#x2F;mpg</td>
<td align="left">.mpv2</td>
<td align="left">video&#x2F;mpeg</td>
</tr>
<tr>
<td align="left">.mpw</td>
<td align="left">application&#x2F;vnd.ms-project</td>
<td align="left">.mpx</td>
<td align="left">application&#x2F;vnd.ms-project</td>
</tr>
<tr>
<td align="left">.mtx</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.mxp</td>
<td align="left">application&#x2F;x-mmxp</td>
</tr>
<tr>
<td align="left">.net</td>
<td align="left">image&#x2F;pnetvue</td>
<td align="left">.nrf</td>
<td align="left">application&#x2F;x-nrf</td>
</tr>
<tr>
<td align="left">.nws</td>
<td align="left">message&#x2F;rfc822</td>
<td align="left">.odc</td>
<td align="left">text&#x2F;x-ms-odc</td>
</tr>
<tr>
<td align="left">.out</td>
<td align="left">application&#x2F;x-out</td>
<td align="left">.p10</td>
<td align="left">application&#x2F;pkcs10</td>
</tr>
<tr>
<td align="left">.p12</td>
<td align="left">application&#x2F;x-pkcs12</td>
<td align="left">.p7b</td>
<td align="left">application&#x2F;x-pkcs7-certificates</td>
</tr>
<tr>
<td align="left">.p7c</td>
<td align="left">application&#x2F;pkcs7-mime</td>
<td align="left">.p7m</td>
<td align="left">application&#x2F;pkcs7-mime</td>
</tr>
<tr>
<td align="left">.p7r</td>
<td align="left">application&#x2F;x-pkcs7-certreqresp</td>
<td align="left">.p7s</td>
<td align="left">application&#x2F;pkcs7-signature</td>
</tr>
<tr>
<td align="left">.pc5</td>
<td align="left">application&#x2F;x-pc5</td>
<td align="left">.pci</td>
<td align="left">application&#x2F;x-pci</td>
</tr>
<tr>
<td align="left">.pcl</td>
<td align="left">application&#x2F;x-pcl</td>
<td align="left">.pcx</td>
<td align="left">application&#x2F;x-pcx</td>
</tr>
<tr>
<td align="left">.pdf</td>
<td align="left">application&#x2F;pdf</td>
<td align="left">.pdf</td>
<td align="left">application&#x2F;pdf</td>
</tr>
<tr>
<td align="left">.pdx</td>
<td align="left">application&#x2F;vnd.adobe.pdx</td>
<td align="left">.pfx</td>
<td align="left">application&#x2F;x-pkcs12</td>
</tr>
<tr>
<td align="left">.pgl</td>
<td align="left">application&#x2F;x-pgl</td>
<td align="left">.pic</td>
<td align="left">application&#x2F;x-pic</td>
</tr>
<tr>
<td align="left">.pko</td>
<td align="left">application&#x2F;vnd.ms-pki.pko</td>
<td align="left">.pl</td>
<td align="left">application&#x2F;x-perl</td>
</tr>
<tr>
<td align="left">.plg</td>
<td align="left">text&#x2F;html</td>
<td align="left">.pls</td>
<td align="left">audio&#x2F;scpls</td>
</tr>
<tr>
<td align="left">.plt</td>
<td align="left">application&#x2F;x-plt</td>
<td align="left">.png</td>
<td align="left">image&#x2F;png</td>
</tr>
<tr>
<td align="left">.png</td>
<td align="left">application&#x2F;x-png</td>
<td align="left">.pot</td>
<td align="left">application&#x2F;vnd.ms-powerpoint</td>
</tr>
<tr>
<td align="left">.ppa</td>
<td align="left">application&#x2F;vnd.ms-powerpoint</td>
<td align="left">.ppm</td>
<td align="left">application&#x2F;x-ppm</td>
</tr>
<tr>
<td align="left">.pps</td>
<td align="left">application&#x2F;vnd.ms-powerpoint</td>
<td align="left">.ppt</td>
<td align="left">application&#x2F;vnd.ms-powerpoint</td>
</tr>
<tr>
<td align="left">.ppt</td>
<td align="left">application&#x2F;x-ppt</td>
<td align="left">.pr</td>
<td align="left">application&#x2F;x-pr</td>
</tr>
<tr>
<td align="left">.prf</td>
<td align="left">application&#x2F;pics-rules</td>
<td align="left">.prn</td>
<td align="left">application&#x2F;x-prn</td>
</tr>
<tr>
<td align="left">.prt</td>
<td align="left">application&#x2F;x-prt</td>
<td align="left">.ps</td>
<td align="left">application&#x2F;x-ps</td>
</tr>
<tr>
<td align="left">.ps</td>
<td align="left">application&#x2F;postscript</td>
<td align="left">.ptn</td>
<td align="left">application&#x2F;x-ptn</td>
</tr>
<tr>
<td align="left">.pwz</td>
<td align="left">application&#x2F;vnd.ms-powerpoint</td>
<td align="left">.r3t</td>
<td align="left">text&#x2F;vnd.rn-realtext3d</td>
</tr>
<tr>
<td align="left">.ra</td>
<td align="left">audio&#x2F;vnd.rn-realaudio</td>
<td align="left">.ram</td>
<td align="left">audio&#x2F;x-pn-realaudio</td>
</tr>
<tr>
<td align="left">.ras</td>
<td align="left">application&#x2F;x-ras</td>
<td align="left">.rat</td>
<td align="left">application&#x2F;rat-file</td>
</tr>
<tr>
<td align="left">.rdf</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.rec</td>
<td align="left">application&#x2F;vnd.rn-recording</td>
</tr>
<tr>
<td align="left">.red</td>
<td align="left">application&#x2F;x-red</td>
<td align="left">.rgb</td>
<td align="left">application&#x2F;x-rgb</td>
</tr>
<tr>
<td align="left">.rjs</td>
<td align="left">application&#x2F;vnd.rn-realsystem-rjs</td>
<td align="left">.rjt</td>
<td align="left">application&#x2F;vnd.rn-realsystem-rjt</td>
</tr>
<tr>
<td align="left">.rlc</td>
<td align="left">application&#x2F;x-rlc</td>
<td align="left">.rle</td>
<td align="left">application&#x2F;x-rle</td>
</tr>
<tr>
<td align="left">.rm</td>
<td align="left">application&#x2F;vnd.rn-realmedia</td>
<td align="left">.rmf</td>
<td align="left">application&#x2F;vnd.adobe.rmf</td>
</tr>
<tr>
<td align="left">.rmi</td>
<td align="left">audio&#x2F;mid</td>
<td align="left">.rmj</td>
<td align="left">application&#x2F;vnd.rn-realsystem-rmj</td>
</tr>
<tr>
<td align="left">.rmm</td>
<td align="left">audio&#x2F;x-pn-realaudio</td>
<td align="left">.rmp</td>
<td align="left">application&#x2F;vnd.rn-rn_music_package</td>
</tr>
<tr>
<td align="left">.rms</td>
<td align="left">application&#x2F;vnd.rn-realmedia-secure</td>
<td align="left">.rmvb</td>
<td align="left">application&#x2F;vnd.rn-realmedia-vbr</td>
</tr>
<tr>
<td align="left">.rmx</td>
<td align="left">application&#x2F;vnd.rn-realsystem-rmx</td>
<td align="left">.rnx</td>
<td align="left">application&#x2F;vnd.rn-realplayer</td>
</tr>
<tr>
<td align="left">.rp</td>
<td align="left">image&#x2F;vnd.rn-realpix</td>
<td align="left">.rpm</td>
<td align="left">audio&#x2F;x-pn-realaudio-plugin</td>
</tr>
<tr>
<td align="left">.rsml</td>
<td align="left">application&#x2F;vnd.rn-rsml</td>
<td align="left">.rt</td>
<td align="left">text&#x2F;vnd.rn-realtext</td>
</tr>
<tr>
<td align="left">.rtf</td>
<td align="left">application&#x2F;msword</td>
<td align="left">.rtf</td>
<td align="left">application&#x2F;x-rtf</td>
</tr>
<tr>
<td align="left">.rv</td>
<td align="left">video&#x2F;vnd.rn-realvideo</td>
<td align="left">.sam</td>
<td align="left">application&#x2F;x-sam</td>
</tr>
<tr>
<td align="left">.sat</td>
<td align="left">application&#x2F;x-sat</td>
<td align="left">.sdp</td>
<td align="left">application&#x2F;sdp</td>
</tr>
<tr>
<td align="left">.sdw</td>
<td align="left">application&#x2F;x-sdw</td>
<td align="left">.sit</td>
<td align="left">application&#x2F;x-stuffit</td>
</tr>
<tr>
<td align="left">.slb</td>
<td align="left">application&#x2F;x-slb</td>
<td align="left">.sld</td>
<td align="left">application&#x2F;x-sld</td>
</tr>
<tr>
<td align="left">.slk</td>
<td align="left">drawing&#x2F;x-slk</td>
<td align="left">.smi</td>
<td align="left">application&#x2F;smil</td>
</tr>
<tr>
<td align="left">.smil</td>
<td align="left">application&#x2F;smil</td>
<td align="left">.smk</td>
<td align="left">application&#x2F;x-smk</td>
</tr>
<tr>
<td align="left">.snd</td>
<td align="left">audio&#x2F;basic</td>
<td align="left">.sol</td>
<td align="left">text&#x2F;plain</td>
</tr>
<tr>
<td align="left">.sor</td>
<td align="left">text&#x2F;plain</td>
<td align="left">.spc</td>
<td align="left">application&#x2F;x-pkcs7-certificates</td>
</tr>
<tr>
<td align="left">.spl</td>
<td align="left">application&#x2F;futuresplash</td>
<td align="left">.spp</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.ssm</td>
<td align="left">application&#x2F;streamingmedia</td>
<td align="left">.sst</td>
<td align="left">application&#x2F;vnd.ms-pki.certstore</td>
</tr>
<tr>
<td align="left">.stl</td>
<td align="left">application&#x2F;vnd.ms-pki.stl</td>
<td align="left">.stm</td>
<td align="left">text&#x2F;html</td>
</tr>
<tr>
<td align="left">.sty</td>
<td align="left">application&#x2F;x-sty</td>
<td align="left">.svg</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.swf</td>
<td align="left">application&#x2F;x-shockwave-flash</td>
<td align="left">.tdf</td>
<td align="left">application&#x2F;x-tdf</td>
</tr>
<tr>
<td align="left">.tg4</td>
<td align="left">application&#x2F;x-tg4</td>
<td align="left">.tga</td>
<td align="left">application&#x2F;x-tga</td>
</tr>
<tr>
<td align="left">.tif</td>
<td align="left">image&#x2F;tiff</td>
<td align="left">.tif</td>
<td align="left">application&#x2F;x-tif</td>
</tr>
<tr>
<td align="left">.tiff</td>
<td align="left">image&#x2F;tiff</td>
<td align="left">.tld</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.top</td>
<td align="left">drawing&#x2F;x-top</td>
<td align="left">.torrent</td>
<td align="left">application&#x2F;x-bittorrent</td>
</tr>
<tr>
<td align="left">.tsd</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.txt</td>
<td align="left">text&#x2F;plain</td>
</tr>
<tr>
<td align="left">.uin</td>
<td align="left">application&#x2F;x-icq</td>
<td align="left">.uls</td>
<td align="left">text&#x2F;iuls</td>
</tr>
<tr>
<td align="left">.vcf</td>
<td align="left">text&#x2F;x-vcard</td>
<td align="left">.vda</td>
<td align="left">application&#x2F;x-vda</td>
</tr>
<tr>
<td align="left">.vdx</td>
<td align="left">application&#x2F;vnd.visio</td>
<td align="left">.vml</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.vpg</td>
<td align="left">application&#x2F;x-vpeg005</td>
<td align="left">.vsd</td>
<td align="left">application&#x2F;vnd.visio</td>
</tr>
<tr>
<td align="left">.vsd</td>
<td align="left">application&#x2F;x-vsd</td>
<td align="left">.vss</td>
<td align="left">application&#x2F;vnd.visio</td>
</tr>
<tr>
<td align="left">.vst</td>
<td align="left">application&#x2F;vnd.visio</td>
<td align="left">.vst</td>
<td align="left">application&#x2F;x-vst</td>
</tr>
<tr>
<td align="left">.vsw</td>
<td align="left">application&#x2F;vnd.visio</td>
<td align="left">.vsx</td>
<td align="left">application&#x2F;vnd.visio</td>
</tr>
<tr>
<td align="left">.vtx</td>
<td align="left">application&#x2F;vnd.visio</td>
<td align="left">.vxml</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.wav</td>
<td align="left">audio&#x2F;wav</td>
<td align="left">.wax</td>
<td align="left">audio&#x2F;x-ms-wax</td>
</tr>
<tr>
<td align="left">.wb1</td>
<td align="left">application&#x2F;x-wb1</td>
<td align="left">.wb2</td>
<td align="left">application&#x2F;x-wb2</td>
</tr>
<tr>
<td align="left">.wb3</td>
<td align="left">application&#x2F;x-wb3</td>
<td align="left">.wbmp</td>
<td align="left">image&#x2F;vnd.wap.wbmp</td>
</tr>
<tr>
<td align="left">.wiz</td>
<td align="left">application&#x2F;msword</td>
<td align="left">.wk3</td>
<td align="left">application&#x2F;x-wk3</td>
</tr>
<tr>
<td align="left">.wk4</td>
<td align="left">application&#x2F;x-wk4</td>
<td align="left">.wkq</td>
<td align="left">application&#x2F;x-wkq</td>
</tr>
<tr>
<td align="left">.wks</td>
<td align="left">application&#x2F;x-wks</td>
<td align="left">.wm</td>
<td align="left">video&#x2F;x-ms-wm</td>
</tr>
<tr>
<td align="left">.wma</td>
<td align="left">audio&#x2F;x-ms-wma</td>
<td align="left">.wmd</td>
<td align="left">application&#x2F;x-ms-wmd</td>
</tr>
<tr>
<td align="left">.wmf</td>
<td align="left">application&#x2F;x-wmf</td>
<td align="left">.wml</td>
<td align="left">text&#x2F;vnd.wap.wml</td>
</tr>
<tr>
<td align="left">.wmv</td>
<td align="left">video&#x2F;x-ms-wmv</td>
<td align="left">.wmx</td>
<td align="left">video&#x2F;x-ms-wmx</td>
</tr>
<tr>
<td align="left">.wmz</td>
<td align="left">application&#x2F;x-ms-wmz</td>
<td align="left">.wp6</td>
<td align="left">application&#x2F;x-wp6</td>
</tr>
<tr>
<td align="left">.wpd</td>
<td align="left">application&#x2F;x-wpd</td>
<td align="left">.wpg</td>
<td align="left">application&#x2F;x-wpg</td>
</tr>
<tr>
<td align="left">.wpl</td>
<td align="left">application&#x2F;vnd.ms-wpl</td>
<td align="left">.wq1</td>
<td align="left">application&#x2F;x-wq1</td>
</tr>
<tr>
<td align="left">.wr1</td>
<td align="left">application&#x2F;x-wr1</td>
<td align="left">.wri</td>
<td align="left">application&#x2F;x-wri</td>
</tr>
<tr>
<td align="left">.wrk</td>
<td align="left">application&#x2F;x-wrk</td>
<td align="left">.ws</td>
<td align="left">application&#x2F;x-ws</td>
</tr>
<tr>
<td align="left">.ws2</td>
<td align="left">application&#x2F;x-ws</td>
<td align="left">.wsc</td>
<td align="left">text&#x2F;scriptlet</td>
</tr>
<tr>
<td align="left">.wsdl</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.wvx</td>
<td align="left">video&#x2F;x-ms-wvx</td>
</tr>
<tr>
<td align="left">.xdp</td>
<td align="left">application&#x2F;vnd.adobe.xdp</td>
<td align="left">.xdr</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.xfd</td>
<td align="left">application&#x2F;vnd.adobe.xfd</td>
<td align="left">.xfdf</td>
<td align="left">application&#x2F;vnd.adobe.xfdf</td>
</tr>
<tr>
<td align="left">.xhtml</td>
<td align="left">text&#x2F;html</td>
<td align="left">.xls</td>
<td align="left">application&#x2F;vnd.ms-excel</td>
</tr>
<tr>
<td align="left">.xls</td>
<td align="left">application&#x2F;x-xls</td>
<td align="left">.xlw</td>
<td align="left">application&#x2F;x-xlw</td>
</tr>
<tr>
<td align="left">.xml</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.xpl</td>
<td align="left">audio&#x2F;scpls</td>
</tr>
<tr>
<td align="left">.xq</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.xql</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.xquery</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.xsd</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.xsl</td>
<td align="left">text&#x2F;xml</td>
<td align="left">.xslt</td>
<td align="left">text&#x2F;xml</td>
</tr>
<tr>
<td align="left">.xwd</td>
<td align="left">application&#x2F;x-xwd</td>
<td align="left">.x_b</td>
<td align="left">application&#x2F;x-x_b</td>
</tr>
<tr>
<td align="left">.sis</td>
<td align="left">application&#x2F;vnd.symbian.install</td>
<td align="left">.sisx</td>
<td align="left">application&#x2F;vnd.symbian.install</td>
</tr>
<tr>
<td align="left">.x_t</td>
<td align="left">application&#x2F;x-x_t</td>
<td align="left">.ipa</td>
<td align="left">application&#x2F;vnd.iphone</td>
</tr>
<tr>
<td align="left">.apk</td>
<td align="left">application&#x2F;vnd.android.package-archive</td>
<td align="left">.xap</td>
<td align="left">application&#x2F;x-silverlight-app</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Snippets</tag>
      </tags>
  </entry>
</search>
